import random, pylab

class Particle(object):
	def __init__ (self, x, y):
		self.x = x
		self.y = y
	# def getX(self):
	# 	return self.x
	# def getY(self):
	# 	return self.y
	def move (self, dx,dy):
		return Particle (self.x + dx, y = self.y + dy)

	def __str__(self):
		return '<' + str(self.x) + ', ' + str(self.y) + '>'
	def calculateDistance(self):
		return (self.x**2 + self.y**2)**0.5

def simWalk(numSteps,numTrials):
	#simulates a walk of numSteps
	simObjects = []
	for numsteps in range (numTrials):
		bob = Particle(0,0)
		for s in range(numSteps):
			bob = walk(bob)
		simObjects.append(bob)
	return simObjects


def walk(object):
	# walks in a random direction
	xDist, yDist =  randomDirection()
	object = object.move(xDist, yDist)
	return object

def randomDirection():
	possibleSteps = [(0,1),(1,0),(0,-1), (-1,0)]
	return random.choice(possibleSteps)

def runSim(numsteps):
	simObjects = simWalk(numsteps,100)
	xData = []
	yData = []
	distances = []

	for object in simObjects:
		xData.append(object.x)
		yData.append(object.y)
		distances.append(object.calculateDistance())

	pylab.plot(xData, yData,'o')
	pylab.show()

	print 'Average Distance = ', sum(distances)/len(distances)
	print 'Max = ', max(distances), 'Min = ', min(distances)

for numSteps in [1,10,50,100,500]:
	runSim(numSteps)